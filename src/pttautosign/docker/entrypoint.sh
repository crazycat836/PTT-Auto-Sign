#!/bin/bash
# PTT Auto Sign Docker Entrypoint Script
# 功能：Docker 容器的入口點腳本
# 用途：確保 Docker 容器正確設置環境並執行適當的腳本

set -e

# Set timezone
export TZ=Asia/Taipei

# Create data directory
mkdir -p /app/data

# Set environment variables
export PYTHONPATH=/app
export PYTHONDONTWRITEBYTECODE=1
export PYTHONUNBUFFERED=1
export PYTHONIOENCODING=utf-8
export PYTHONWARNINGS=ignore
export PYPTT_DISABLE_LOGS=1

# Create log directory
mkdir -p /var/log

# Copy .env file if it exists
if [ -f "/app/.env" ]; then
    echo "Using existing .env file"
else
    echo "Creating .env file from environment variables..."
    cat > /app/.env << EOL
# PTT Auto Sign Environment Variables
# Generated by Docker entrypoint script

# PTT Account Settings
PTT_USERNAME=${PTT_USERNAME}
PTT_PASSWORD=${PTT_PASSWORD}

# Telegram Settings
TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
TELEGRAM_CHAT_ID=${TELEGRAM_CHAT_ID}

# Cron Settings
ENABLE_CRON=${ENABLE_CRON:-true}
EOL
fi

# Load environment variables from .env file
if [ -f "/app/.env" ]; then
    echo "Loading environment variables from .env file..."
    export $(cat /app/.env | grep -v '^#' | xargs)
fi

# Debug: Show Python version and installed packages
echo "Python version:"
python --version
echo "Installed packages:"
pip list

# Install telnetlib3 if not already installed
if ! pip list | grep -q telnetlib3; then
    echo "Installing telnetlib3..."
    pip install --no-cache-dir telnetlib3
    echo "telnetlib3 installed successfully."
else
    echo "telnetlib3 is already installed."
fi

# Verify telnetlib3 installation
echo "Verifying telnetlib3 installation..."
if python -c "import telnetlib3; print('telnetlib3 imported successfully')" 2>/dev/null; then
    echo "telnetlib3 verification successful."
else
    echo "Warning: telnetlib3 verification failed. Installing again..."
    pip uninstall -y telnetlib3
    pip install --no-cache-dir telnetlib3
    
    # Check again
    if python -c "import telnetlib3; print('telnetlib3 imported successfully')" 2>/dev/null; then
        echo "telnetlib3 reinstallation successful."
    else
        echo "Error: telnetlib3 installation failed. Continuing anyway..."
    fi
fi

# Set up cron job if enabled
if [ "$ENABLE_CRON" = "true" ]; then
    echo "Setting up cron job..."
    # Get random cron schedule
    CRON_SCHEDULE=$(/usr/local/bin/random_cron.sh)
    echo "Generated cron schedule: $CRON_SCHEDULE"
    
    # Add cron job
    (crontab -l 2>/dev/null | grep -v "pttautosign.main") | crontab -
    (crontab -l 2>/dev/null; echo "$CRON_SCHEDULE /usr/local/bin/python -m pttautosign.main >> /var/log/ptt_autosign.log 2>&1") | crontab -
    
    # Start cron service
    service cron start
fi

# Switch to non-root user
exec su -c "python -m pttautosign.main" pttuser 